// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tf2024_asp_razor.Database;

#nullable disable

namespace tf2024_asp_razor.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250115110717_initMike")]
    partial class initMike
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MechanicEntityPlaneTypeEntity", b =>
                {
                    b.Property<int>("HabilitationsId")
                        .HasColumnType("int");

                    b.Property<int>("MechanicsId")
                        .HasColumnType("int");

                    b.HasKey("HabilitationsId", "MechanicsId");

                    b.HasIndex("MechanicsId");

                    b.ToTable("MechanicEntityPlaneTypeEntity");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.FlightEntity", b =>
                {
                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("NbFlights")
                        .HasColumnType("int");

                    b.HasKey("PilotId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Flight", (string)null);
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.PlaneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imma")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Plane", (string)null);
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.PlaneTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Constructor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbPlace")
                        .HasColumnType("int");

                    b.Property<float>("Power")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("PlaneType", (string)null);
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.MaintenanceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CheckerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaneId")
                        .HasColumnType("int");

                    b.Property<int>("ReparerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheckerId");

                    b.HasIndex("PlaneId");

                    b.HasIndex("ReparerId");

                    b.ToTable("Maintenance", null, t =>
                        {
                            t.HasCheckConstraint("CK_Maintenance_CheckerVerifier", "CheckerId != ReparerId");
                        });
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.TaxableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Taxable", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", b =>
                {
                    b.HasBaseType("tf2024_asp_razor.Models.Entities.TaxableEntity");

                    b.ToTable("Mechanics", (string)null);
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.PilotEntity", b =>
                {
                    b.HasBaseType("tf2024_asp_razor.Models.Entities.TaxableEntity");

                    b.Property<string>("Licences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Pilots", (string)null);
                });

            modelBuilder.Entity("MechanicEntityPlaneTypeEntity", b =>
                {
                    b.HasOne("tf2024_asp_razor.Models.Entities.PlaneTypeEntity", null)
                        .WithMany()
                        .HasForeignKey("HabilitationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", null)
                        .WithMany()
                        .HasForeignKey("MechanicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.FlightEntity", b =>
                {
                    b.HasOne("tf2024_asp_razor.Models.Entities.Taxable.PilotEntity", "Pilot")
                        .WithMany("Flights")
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("tf2024_asp_razor.Models.Entities.PlaneTypeEntity", "Type")
                        .WithMany("Flights")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pilot");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.PlaneEntity", b =>
                {
                    b.HasOne("tf2024_asp_razor.Models.Entities.TaxableEntity", "Owner")
                        .WithMany("Planes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("tf2024_asp_razor.Models.Entities.PlaneTypeEntity", "Type")
                        .WithMany("Planes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.MaintenanceEntity", b =>
                {
                    b.HasOne("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", "Checker")
                        .WithMany("Checked")
                        .HasForeignKey("CheckerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("tf2024_asp_razor.Models.Entities.PlaneEntity", "Plane")
                        .WithMany("Maintenances")
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", "Reparer")
                        .WithMany("Repared")
                        .HasForeignKey("ReparerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Checker");

                    b.Navigation("Plane");

                    b.Navigation("Reparer");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", b =>
                {
                    b.HasOne("tf2024_asp_razor.Models.Entities.TaxableEntity", null)
                        .WithOne()
                        .HasForeignKey("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.PilotEntity", b =>
                {
                    b.HasOne("tf2024_asp_razor.Models.Entities.TaxableEntity", null)
                        .WithOne()
                        .HasForeignKey("tf2024_asp_razor.Models.Entities.Taxable.PilotEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.PlaneEntity", b =>
                {
                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.PlaneTypeEntity", b =>
                {
                    b.Navigation("Flights");

                    b.Navigation("Planes");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.TaxableEntity", b =>
                {
                    b.Navigation("Planes");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.MechanicEntity", b =>
                {
                    b.Navigation("Checked");

                    b.Navigation("Repared");
                });

            modelBuilder.Entity("tf2024_asp_razor.Models.Entities.Taxable.PilotEntity", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
